{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","React","useState","sum","setSum","values","selected","setSelected","className","map","dname","idx","value","disabled","onClick","arr","style","background","color","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+OAAe,I,MCyCAA,MArCf,WACE,IADa,EAEMC,IAAMC,SAAS,GAFrB,mBAENC,EAFM,KAEFC,EAFE,KAGPC,EAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAHjD,EAIkBJ,IAAMC,SAAS,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAJhF,mBAINI,EAJM,KAIGC,EAJH,KAKb,OACE,sBAAKC,UAAU,MAAf,UALc,CAAC,UAAW,YAAY,yBAAyB,qBAAqB,yBAAyB,iBAAiB,MAAO,aAAa,YAAY,WAAW,gBAAgB,YAAY,cAAc,SAAS,WAAW,WAAW,iBAAiB,WAAW,eAAe,iBAAiB,wBAAwB,QAAQ,mBAAmB,cAMtVC,KAAI,SAACC,EAAMC,GAAP,OACX,8BACE,yBAAQC,MAAOD,EAAKE,SAAUP,EAASK,GAAMG,QAAS,WACpDV,EAAOD,EAAIE,EAAOM,IAClBJ,GAAY,SAACQ,GAAD,4BACPA,GADO,CAEVA,EAAIJ,GAAK,QAEVK,MAAO,CAACC,WAA4B,IAAhBX,EAASK,GAAU,UAAW,SAASO,MAAO,SANrE,eAMkFP,EAAI,EANtF,KAM2FD,EAN3F,UAMyGL,EAAOM,MAChH,oCACA,wBAAQE,SAA0B,IAAhBP,EAASK,GAAUG,QAAS,WAC5CV,EAAOD,EAAIE,EAAOM,IAClBJ,GAAY,SAACQ,GAAD,4BACPA,GADO,CAEVA,EAAIJ,GAAK,QAJb,0BASH,6BACIR,IAEL,wBAAQW,QAAS,WACfV,EAAO,GACPG,EAAY,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,KAF7D,uBCrBSY,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.0cd4c113.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.103b5fa1.svg\";","import logo from './logo.svg';\nimport React from 'react'\nimport './App.css';\n\nfunction App() {\n  const numbers = [\"Seizure\", \"Psychosis\",\"Organic Brain Syndrome\",\"Visual Disturbance\",\"Cranial Nerve Disorder\",\"Lupus Headache\",\"CVA\", \"Vasculitis\",\"Arthritis\",\"Myositis\",\"Urinary Casts\",\"Hematuria\",\"Proteinuria\",\"Pyuria\",\"New Rash\",\"Alopecia\",\"Mucosal Ulcers\",\"Pleurisy\",\"Pericarditis\",\"Low Complement\",\"Increased DNA Binding\",\"Fever\",\"Thrombocytopenia\",\"Leukopenia\"];\n  const [sum,setSum]=React.useState(0);\n  const values = [8,8,8,8,8,8,8,8,4,4,4,4,4,4,2,2,2,2,2,2,2,1,1,1];\n  const [selected,setSelected] = React.useState([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]);\n  return (\n    <div className=\"App\">\n      {numbers.map((dname,idx) => (\n        <p>\n          <button value={idx} disabled={selected[idx]} onClick={() => {\n            setSum(sum+values[idx]);\n            setSelected((arr) => [\n              ...arr,\n              arr[idx]=1,\n            ] )\n          }} style={{background: selected[idx]===1? \"#84e07e\": \"yellow\",color: \"black\"}}> ({idx+1}) {dname} score={values[idx]}</button>\n          <spa> </spa>\n          <button disabled={selected[idx]===0} onClick={() => {\n            setSum(sum-values[idx]);\n            setSelected((arr) => [\n              ...arr,\n              arr[idx]=0,\n            ] )\n          }}>Remove</button>\n        </p>\n      ))}\n      {<h1>\n          {sum}\n      </h1>}\n      <button onClick={() => {\n        setSum(0);\n        setSelected([0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0])\n        }}>Reset</button>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}